datasource db {
  provider = "postgresql" // or another database provider like "mysql", "sqlite", "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// User model
model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  name          String?
  roles         Role[]         @relation(references: [id])
  teamId        Int?
  team          Team?          @relation(fields: [teamId], references: [id])
  payments      Payment[]
  subscriptions Subscription[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  Team          Team[]
  Team          Team[]
}

// Role model
model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[] @relation(references: [id])
}

// Team model
model Team {
  id           Int           @id @default(autoincrement())
  name         String
  users        User[]
  managerId    Int
  manager      User          @relation(name: "TeamManager", fields: [managerId], references: [id])
  subscription Subscription?
}

// Payment model
model Payment {
  id     Int      @id @default(autoincrement())
  userId Int
  amount Float
  date   DateTime @default(now())
  user   User     @relation(fields: [userId], references: [id])
}

// Subscription model
model Subscription {
  id        Int      @id @default(autoincrement())
  teamId    Int?
  team      Team?    @relation(fields: [teamId], references: [id])
  startDate DateTime @default(now())
  endDate   DateTime
  status    String // Example: "active", "cancelled", "paused"
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}
