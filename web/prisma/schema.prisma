// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  name        String
  password    String?
  verifyToken String   @default(uuid())
  verified    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  avatar      String?
  provider    String
  teams       Team[] // A user can belong to multiple teams
}

model Team {
  id            String         @id @default(uuid())
  name          String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
  users         User[] // A team can have multiple users
  subscriptions Subscription[] // A team can have multiple subscriptions
}

model Subscription {
  id                   String    @id @default(uuid())
  stripeSubscriptionId String    @unique
  name                 String
  userId               String
  priceId              String
  status               String
  team                 Team?     @relation(fields: [teamId], references: [id])
  teamId               String?
  startDate            DateTime
  endDate              DateTime
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @default(now())
  payments             Payment[] // A subscription can have multiple payments
}

model Payment {
  id             String       @id @default(uuid())
  amount         Float
  currency       String
  status         String
  subscription   Subscription @relation(fields: [subscriptionId], references: [id])
  subscriptionId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model EmailVerification {
  id        String   @id @default(uuid())
  email     String
  used      Boolean  @default(false)
  token     String   @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ResetPassword {
  id        String   @id @default(uuid())
  email     String
  used      Boolean  @default(false)
  token     String   @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WaitlistUser {
  id        String   @id @default(uuid())
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
